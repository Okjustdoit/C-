1、自动存储
  在函数内部定义，称为自动变量，是一个局部变量，通常存储在栈中，在离开代码块时，将按相反的反向释放这些变量（后进先出）
  栈的默认长度取决于实现，但编译器通常提供改变栈长度的选项。程序使用两个指针来跟踪栈，一个指针指向栈底--栈的开始位置，
   另一个指针指向栈顶--下一个可以单元。当函数被调用时，其自动变量将被加入到栈中，栈顶指针指向变量后面的下一个可用的内
   存单元。函数结束时，栈顶指针被重置为函数被调用前的值，从而释放新变量使用的内存。
2、静态存储
  静态变量
  1、在函数外面定义
  2、使用关键字static
3、动态存储
  new和delete管理了一个内存池，称为自动存储空间或堆
  使用new运算符初始化
  C++11
  double * pin = new int(99.9);
  int * ar = new int[4] {2,3,4,5};
  
定位new运算符
  定位new函数不可替换，但可重载  
  需要包含头文件new //#include <new>
  
  p2 = new (buffer1)int[20]; //new(20 * sizeof(int), buffer1);
  char buffer1[50];
  /**
   *第一个参数std::size_t:指定请求的字节数
   *@parm buffer1:指定位置
   */
  new(20 * sizeof(int), buffer1);
  
链接性为内部的变量只能在其所属的文件中使用，但常规外部变量都具有外部lianje性，即可以在其他文件中使用。


名称空间：
  using声明和using编译指令、作用域解析运算符
    using声明使特定的标识符可用，using编译指令使整个名称空间可用
    using声明由被限定的名称和它前面的关键字using组成
      using Jill::fetch;
    using编译指令由名称空间名和它前面的关键字using namespace组成
      using namespace std;  //make names available globally
     
